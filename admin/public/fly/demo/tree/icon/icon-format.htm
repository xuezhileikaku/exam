<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <title></title>
    <script src="../../../fly.mini-all.js" type="text/javascript"></script>
    <script src="../../common/demo.js" type="text/javascript"></script>

    <link href="../../../tree/skin/default/tree.css" rel="stylesheet" type="text/css" />
    <link href="../../common/demo.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="demo-title">
        Using iconFormat property to setting and format node icon path
    </div>
    <a href="javascript:viewSource('code')" class="button-viewSource" >View code</a>
    <div id="treeContainer" class="demo-tree-container">
    </div>
        <div class="demo-code">
        new fly.mini.Tree({<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <em>&nbsp;//节点icon属性将用该格式进行格式化(其中{0}代表节点实例化时指定的 icon 属性)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Icon attribute node with the format for 
            formatting (thereinto {0} representative node instantiated attribute specified 
            icon) </em><br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>iconFormat:&quot;imgs/{0}.gif&quot;</strong>,<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; items:[{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <strong>icon: &quot;a&quot;</strong><br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <strong>icon: &quot;b&quot;</strong><br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />
        })</div>
    The above code is equivalent to:

        <div class="demo-code">
        new fly.mini.Tree({<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; items:[{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <strong>icon: &quot;imgs/a.gif&quot;</strong><br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },{<br />
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 
        <strong>icon: &quot;imgs/b.gif&quot;</strong><br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />
        })<br />
    </div>

    You can also format icon path like this:
        <div class="demo-code">
            new fly.mini.Tree({<br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <em>&nbsp;//节点icon属性将用该格式进行格式化(其中{tag}代表节点的 tag 属性)<br />
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Icon attribute node with the format for 
            formatting (thereinto {tag} representative node instantiated attribute specified 
            icon) </em><br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>iconFormat:&quot;imgs/{tag}.gif&quot;</strong>,<br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; items:[{<br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>tag: &quot;a&quot;</strong><br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; },{<br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>tat: &quot;b&quot;</strong><br />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }]<br />
            })</div>
    
    <script type="text/javascript" id=code >
        var items = [{
            expanded: true,
            text: 'Library',
            icon: 'library',
            items: [{
                text: 'Video',
                icon: 'video',
                items: [{

                    text: 'My video',
                    icon: 'video-my'
                }, {
                    text: 'Public voide',
                    icon: 'video-pub'
                }]
            }, {
                text: 'Picture',
                icon: 'picture',
                items: [{
                    text: 'My picture',
                    icon: 'picture-my'
                }, {
                    text: 'Public picture',
                    icon: 'picture-pub'
                }]
            }, {
                text: 'Document',
                icon: 'document',
                items: [{
                    text: 'My document',
                    icon: 'document-my'
                }, {
                    text: 'Public document',
                    icon: 'document-pub'
                }]
            }, {
                text: 'Music',
                icon: 'music',
                items: [{
                    text: 'My music',
                    icon: 'music-my'
                }, {
                    text: 'Public music',
                    icon: 'music-pub'
                }]
            }, {
                text: 'Other',
                icon: 'other'
            }]
        }]


        var tree = new fly.mini.Tree({
            container: "treeContainer",
            
            //Specify the icon format path
            iconFormat: '../../common/imgs/{0}.gif',
            checkMode: fly.mini.checkMode.multi,
            checkCascade: true,
            data: items
        });
    </script>
</body>
</html>
